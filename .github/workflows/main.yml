name: CI
on: 
  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        poetry-version: [1.0, 1.1.4]
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pypoetry/virtualenvs/
        - os: windows-latest
          path: ~\AppData\Local\pypoetry\Cache\virtualenvs
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.poetry-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-poetry-
      - name: Install libraries
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install 
      - name: Test coverage
        run: poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.2.1
        with:
          files: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: true
  pypi:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: pip install face-group
      - name: Run face-group
        run: face-group --help
    
  
